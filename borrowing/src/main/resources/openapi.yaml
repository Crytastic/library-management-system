openapi: 3.0.1
info:
  title: Borrowing microservice of library management system
  description: Borrowing microservice of library management system that provides operations on borrowings
  version: 1.0.0
servers:
  - url: "http://localhost:8080"
tags:
  - name: Borrowing

components:
  securitySchemes:
    MUNI:
      type: oauth2
      description: get access token with OAuth 2 Authorization Code Grant
      flows:
        authorizationCode:
          authorizationUrl: https://oidc.muni.cz/oidc/authorize
          tokenUrl: https://oidc.muni.cz/oidc/token
          scopes:
            test_read: Used fo reading data
            test_write: Used for modifying data
            test_1: Used for deleting data
  schemas:
    BorrowingDTO:
      title: "A borrowing"
      description: "Represents a single borrowing of a book in a library"
      properties:
        id: { type: integer, format: int64, description: "ID of borrowing", example: 24 }
        bookId:
          type: integer
          format: int64
          description: "Id of the book being borrowed"
          example: 11
        borrowerId:
          type: integer
          format: int64
          description: "Id of the person borrowing the book"
          example: 12
        borrowDate:
          type: string
          format: date-time
          description: "Date when the book was borrowed"
          example: "2024-04-03T10:15:30Z"
        expectedReturnDate:
          type: string
          format: date-time
          description: "Date when the book is expected to be returned"
          example: "2024-07-03T10:15:30Z"
        returned:
          type: boolean
          description: "Indicates whether the book has been returned"
          example: false
        returnDate:
          type: string
          format: date-time
          description: "Date when the book was returned, null If it hasn't been returned yet"
          example: "2024-04-06T08:30:00Z"
        lateReturnWeeklyFine:
          type: number
          description: "Weekly fine for late returns in euros"
          example: "1.50"
        fineResolved:
          type: boolean
          description: "Whether the fine for late return is resolved. True if book is returned and fine has been paid (or there is no fine). False otherwise."
          example: true

paths:
  /api/borrowings:
    get:
      tags:
        - Borrowing
      summary: Returns all borrowings
      operationId: getBorrowings
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                title: BorrowingsResponse
                items:
                  $ref: '#/components/schemas/BorrowingDTO'
        '401':
          description: Unauthorized - access token not provided or not valid
        '403':
          description: Forbidden - access token does not have scope test_read
      security:
        - MUNI: [ test_read ]
    post:
      tags:
        - Borrowing
      summary: Creates new borrowing
      operationId: createBorrowing
      parameters:
        - { name: bookId,
            in: query,
            required: true,
            schema: { type: integer, format: int64 },
            description: "Id of borrowed book" }
        - { name: borrowerId,
            in: query,
            required: true,
            schema: { type: integer, format: int64 },
            description: "Id of borrower" }
        - { name: expectedReturnDate,
            in: query,
            required: false,
            schema: { type: string, format: date-time },
            description: "Expected return date. Three months from now If not specified." }
        - { name: lateReturnWeeklyFine,
            in: query,
            required: false,
            schema: { type: number },
            description: "Late return weekly fine in euros. 1 EUR if not specified." }
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BorrowingDTO'
        '401':
          description: Unauthorized - access token not provided or not valid
        '403':
          description: Forbidden - access token does not have scope test_write
      security:
        - MUNI: [ test_write ]
    delete:
      tags:
        - Borrowing
      summary: Delete all borrowings
      operationId: deleteBorrowings
      responses:
        '204':
          description: No content
        '401':
          description: Unauthorized - access token not provided or not valid
        '403':
          description: Forbidden - access token does not have scope test_1
      security:
        - MUNI: [ test_1 ]
  /api/borrowings/{id}:
    get:
      tags:
        - Borrowing
      summary: Get borrowing by id
      operationId: getBorrowing
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BorrowingDTO'
        '401':
          description: Unauthorized - access token not provided or not valid
        '403':
          description: Forbidden - access token does not have scope test_read
      security:
        - MUNI: [ test_read ]
    patch:
      tags:
        - Borrowing
      summary: Update an existing borrowing
      operationId: updateBorrowing
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
            format: int64
        - in: query
          name: bookId
          required: false
          schema:
            type: integer
            format: int64
        - in: query
          name: borrowerId
          required: false
          schema:
            type: integer
            format: int64
        - in: query
          name: borrowDate
          required: false
          schema:
            type: string
            format: date-time
        - in: query
          name: expectedReturnDate
          required: false
          schema:
            type: string
            format: date-time
        - in: query
          name: returned
          required: false
          schema:
            type: boolean
        - in: query
          name: returnDate
          required: false
          schema:
            type: string
            format: date-time
        - in: query
          name: lateReturnWeeklyFine
          required: false
          schema:
            type: number
        - in: query
          name: fineResolved
          required: false
          schema:
            type: boolean
      responses:
        '200':
          description: OK
        '404':
          description: Not found
        '401':
          description: Unauthorized - access token not provided or not valid
        '403':
          description: Forbidden - access token does not have scope test_write
      security:
        - MUNI: [ test_write ]
    delete:
      tags:
        - Borrowing
      summary: Delete borrowing by id
      operationId: deleteBorrowing
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '204':
          description: No content
        '401':
          description: Unauthorized - access token not provided or not valid
        '403':
          description: Forbidden - access token does not have scope test_1
      security:
        - MUNI: [ test_1 ]
  /api/borrowings/{id}/fine:
    get:
      tags:
        - Borrowing
      summary: Get fine for a borrowing by ID
      operationId: getFineById
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: number
        '404':
          description: Not found
        '401':
          description: Unauthorized - access token not provided or not valid
        '403':
          description: Forbidden - access token does not have scope test_read
      security:
        - MUNI: [ test_read ]
  /api/activeBorrowings:
    get:
      tags:
        - Borrowing
      summary: Returns all active borrowings
      operationId: getActiveBorrowings
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                title: BorrowingsResponse
                items:
                  $ref: '#/components/schemas/BorrowingDTO'
        '401':
          description: Unauthorized - access token not provided or not valid
        '403':
          description: Forbidden - access token does not have scope test_read
      security:
        - MUNI: [ test_read ]
