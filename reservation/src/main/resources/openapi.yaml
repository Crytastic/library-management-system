openapi: 3.0.1
info:
  title: Reservation microservice of library management system
  description: Reservation microservice of library management system that provides operations on reservations
  version: 1.0.0
servers:
  - url: "http://localhost:8084"
tags:
  - name: Reservation

components:
  schemas:
    ReservationDTO:
      title: "A reservation"
      description: "Reservation object"
      properties:
        book: {type: string, description: "Book that is part of the reservation", example: "Java tutorial" }
        reservedBy: {type: string, description: "User that created this reservation", example: "Franta Palica"}
        reservedFrom: {type: string, format: date-time, description: "Date when reservation was created", example: "2024-04-03T10:15:30Z" }
        reservedTo: {type: string, format: date-time, description: "Date when the reservation was/will be cancelled", example: "2024-04-03T10:15:30Z"}


paths:
  /api/test:
    get:
      tags:
        - Reservation
      summary: Returns test message response
      operationId: test
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                title: ReservationTestResponse
                properties:
                  message:
                    type: string
  /api/reservations:
    get:
      tags:
        - Reservation
      summary: Returns all rentals
      operationId: getReservations
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ReservationDTO'
    post:
      tags:
        - Reservation
      summary: Creates new reservation
      operationId: createReservation
      parameters:
        - { name: book,
            in: query,
            required: true,
            schema: { type: string },
            description: "Title of book" }
        - { name: reservedBy,
            in: query,
            required: true,
            schema: { type: string },
            description: "Name of User" }
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReservationDTO'

